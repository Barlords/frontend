name: Push on Main pipeline
run-name: ${{ github.actor }} test sa PR ðŸš€
on:
  push:
    branches:
      - 'main'
      - 'master'
jobs:
  Linter:
    runs-on: ubuntu-latest
    container: node:18.9.1-alpine3.16
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Start Linter
        run: npm run lint-check
  
  Tests:
    needs: Linter
    runs-on: ubuntu-latest
    container: node:18.9.1-alpine3.16
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Start Tests
        run: npm run test:unit
        
  Build:
    needs: Tests
    runs-on: ubuntu-latest
    container: node:18.9.1-alpine3.16
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build
        
  Build-Docker-Image:
    needs: Build
    runs-on: ubuntu-latest
    container: docker:20.10.20-alpine3.16
    steps:
      - uses: actions/checkout@v4
      - name: Log on DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME  }} --password ${{ secrets.DOCKER_PASSWORD  }}
      - name: Build frontend image
        run: docker build -t ${{ secrets.DOCKER_USERNAME  }}/frontend:$GITHUB_RUN_ID .
      - name: Add tag and push frontend image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME  }}/frontend:$GITHUB_RUN_ID ${{ secrets.DOCKER_USERNAME  }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME  }}/frontend:$GITHUB_RUN_ID
          docker push ${{ secrets.DOCKER_USERNAME  }}/frontend:latest

  Deploy-Terraform:
    needs: Build-Docker-Image
    runs-on: ubuntu-latest
    steps:
      - name: Trigger terraform repo workflow
        uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: Barlords
          repo: terraform-iac
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          workflow_file_name: github-actions.yml
          ref: main
          wait_interval: 10
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
          client_payload: '{"var": "1"}'


#  Deploy-Terraform:
#    needs: Build-Docker-Image
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup Terraform CLI
#        uses: hashicorp/setup-terraform@v2
#
#      - name: Setup Helm CLI
#        uses: azure/setup-helm@v3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
#        id: install
#
#      - name: Clone Barlords/terraform-iac PUBLIC repository
#        uses: GuillaumeFalourd/clone-github-repo-action@main
#        with:
#          owner: 'Barlords'
#          repository: 'terraform-iac'
#
#      - name: Package Helm chart
#        run: |
#          cd terraform-iac/terraform
#
#          echo "** Running Helm Package **"
#          helm package ./app/
#
#      - name: Terraform init, plan and apply
#        run: |
#          cd terraform-iac/terraform
#
#          echo `pwd`
#          echo "** Running Terraform Init **"
#          terraform init
#
#          echo "** Running Terraform Validate **"
#          terraform validate
#
#          echo "** Running Terraform Plan **"
#          terraform plan
#
#          echo "** Running Terraform Apply **"
#          terraform apply -auto-approve
#
#      - name: Terraform Destroy
#        run: |
#          cd terraform-iac/terraform
#
#          echo "** Running Terraform Destroy **"
#          terraform destroy -auto-approve