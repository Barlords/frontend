stages:
    - linter
    - test
    - build
    - build-docker-image
    - sonarcloud-check
    - deploy

linter:
    stage: linter
    image: node:18.9.1-alpine3.16
    before_script:
        - npm install
    script:
        - npm run lint-check
    only:
        - merge_requests
        - master
        - main

test:
    stage: test
    needs:
        - linter
    image: node:18.9.1-alpine3.16
    before_script:
        - npm install
    script:
        - npm run test:unit
    only:
        - merge_requests
        - master
        - main

build:
    stage: build
    needs:
        - test
    image: node:18.9.1-alpine3.16
    before_script:
        - npm install
    script:
        - npm run build
    only:
        - merge_requests
        - master
        - main

build-docker-image:
    stage: build-docker-image
    needs:
        - build
    image: docker:20.10.20-alpine3.16
    services:
        - name: docker:20.10.20-dind-alpine3.16
          alias: docker
    script:
        - docker login -u $DOCKER_USERNAME --password ${DOCKER_PASSWORD}
        - docker build -t ${DOCKER_USERNAME}/frontend:$CI_COMMIT_SHORT_SHA .
        - docker tag ${DOCKER_USERNAME}/frontend:$CI_COMMIT_SHORT_SHA ${DOCKER_USERNAME}/frontend:latest
        - docker push ${DOCKER_USERNAME}/frontend:$CI_COMMIT_SHORT_SHA
        - docker push ${DOCKER_USERNAME}/frontend:latest

    only:
        - main
        - master

sonarcloud-check:
    stage: sonarcloud-check
    needs:
        - build
    image:
        name: sonarsource/sonar-scanner-cli:latest
        entrypoint: [ "" ]
    variables:
        SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
        GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    cache:
        key: "${CI_JOB_NAME}"
        paths:
            - .sonar/cache
    script:
        - sonar-scanner
    only:
        - merge_requests
        - master
        - main
        - develop
    allow_failure: true

deploy:
    stage: deploy
    needs:
        - sonarcloud-check
        - build-docker-image
    image: bitnami/kubectl:latest
    script:
        - kubectl --kubeconfig ${KUBECONFIG} apply -f ${DEPLOYMENT_FRONTEND}
        - kubectl --kubeconfig ${KUBECONFIG} apply -f ${INGRESS_FRONTEND}
    only:
        - master
        - main
